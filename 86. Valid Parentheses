import java.util.*;
public class Solution {
    public static boolean isValidParenthesis(String expression) {
        // Write your code here.
        if(expression.length()%2!=0){
            return false;
        }
        Stack<Character> st=new Stack<>();
        for(int i=0;i<expression.length();i++){
            if(expression.charAt(i)=='{' || expression.charAt(i)=='[' || expression.charAt(i)=='('){
                st.push(expression.charAt(i));
            }else{
                if(st.isEmpty()){
                    return false;
                }
                if(expression.charAt(i)=='}'){
                    if(st.peek()=='{'){
                        st.pop();
                    }else{
                        return false;
                    }
                }else if(expression.charAt(i)==']'){
                    if(st.peek()=='['){
                        st.pop();
                    }else{
                        return false;
                    }
                }else{
                    if(st.peek()=='('){
                        st.pop();
                    }else{
                        return false;
                    }
                }
            }
        }
        return st.isEmpty();
    }
}
